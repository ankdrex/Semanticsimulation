import random
# Example code for MDP with 4 resources
class MDPAgent:
    def __init__(self):
        self.grid_size = (5, 5)
        self.start_pos = (1, 3)
        self.goal_pos = (5, 1)
        self.trap_pos = (3, 1)  # Added trap position
        self.resource_areas = {(2, 2): 60, (2, 4): 60, (4, 2): 60, (4, 4): 60}
        self.energy_budget = 100
        self.max_energy = 100
        self.energy_cost = 10
        self.successes = 0
        self.failures = 0
        self.steps = 0

    def reset(self):
        self.position = self.start_pos
        self.energy_budget = self.max_energy
        self.resource_areas = {(2, 2): 60, (2, 4): 60, (4, 2): 60, (4, 4): 60}

    def get_valid_moves(self):
        x, y = self.position
        moves = []
        if x < self.grid_size[0]: moves.append((x + 1, y))  # Forward
        if y > 1: moves.append((x, y - 1))  # Down
        if y < self.grid_size[1]: moves.append((x, y + 1))  # Up
        self.steps += 1
        return moves

    def move(self):
        if self.energy_budget <= 0:
            return False
        
        moves = self.get_valid_moves()
        self.position = random.choice(moves)
        self.energy_budget -= self.energy_cost

        if self.position == self.trap_pos:  # Check if agent moved into the trap
            self.failures += 1
            return False

        if self.position in self.resource_areas and self.resource_areas[self.position] > 0:
            self.energy_budget += self.resource_areas[self.position]
            self.energy_budget = min(self.energy_budget, self.max_energy)
            self.resource_areas[self.position] = 0

        if self.energy_budget <= 0:
            self.failures += 1
            return False

        if self.position == self.goal_pos:
            self.successes += 1
            return False

        return True

    def run_simulation(self, runs=100):
        for _ in range(runs):
            self.reset()
            while self.move():
                pass
        print(f"Successes: {self.successes}, Failures: {self.failures}, Steps: {self.steps}")

if __name__ == "__main__":
    agent = MDPAgent()
    agent.run_simulation(1000)
